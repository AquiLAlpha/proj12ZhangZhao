class Main extends MainMainTest{//none-existing parent 
	String arc = 1; //wrong field declaration type
	void foo(){
		this.arc++; //unary type error
		var s = "good"; 
		this.arc = "hi"; 
		var a = 3;
		a[s] = 5; //array index not an integer
		a = this.arc/10; //undefined variable, wrong binary division type
		var b = 10*this.arc; //wrong binary multiply type
		var c = this.arc + s; //wrong binary add type
		var boolean = this.arc||s; //wrong binary logical or type
		var and = this.arc&&a; //wrong binary logical and type
		//var c = (String)111; //wrong cast type
		if(arc){ //wrong if statement condition type
			return s>=this.arc; //wrong return type, wrong comparision type
		}
		if(s>this.arc){
			voo();
		}
		if(s==this.arc){
			voo();
		}
		if(s<=this.arc){
			voo();
		}
		while(c=1){ //while loop condition not boolean
			voo();
		}

		for(i = "hi"; i< 10; i++){//initialization is not an integer

		}
		for(i = 0; i = i+1;i++){//condition is not boolean

		}
	}
	test voo(){
		this.foooo(); //none existing method name
	}
}
//cycle inheritence
class G extends I{

}

class H extends G{

}

class I extends H{

}